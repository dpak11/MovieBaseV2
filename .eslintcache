[{"C:\\deepak\\project\\REACT\\moviebaseV2\\src\\index.js":"1","C:\\deepak\\project\\REACT\\moviebaseV2\\src\\App.js":"2","C:\\deepak\\project\\REACT\\moviebaseV2\\src\\store\\MovieContext.js":"3","C:\\deepak\\project\\REACT\\moviebaseV2\\src\\components\\Nav.js":"4","C:\\deepak\\project\\REACT\\moviebaseV2\\src\\components\\Footer.js":"5","C:\\deepak\\project\\REACT\\moviebaseV2\\src\\components\\MovieGallery.js":"6","C:\\deepak\\project\\REACT\\moviebaseV2\\src\\components\\Home.js":"7","C:\\deepak\\project\\REACT\\moviebaseV2\\src\\components\\MovieDetail.js":"8","C:\\deepak\\project\\REACT\\moviebaseV2\\src\\components\\SearchPanel.js":"9","C:\\deepak\\project\\REACT\\moviebaseV2\\src\\components\\Movie.js":"10","C:\\deepak\\project\\REACT\\moviebaseV2\\src\\components\\VisitedList.js":"11","C:\\deepak\\project\\REACT\\moviebase-react18\\src\\index.js":"12","C:\\deepak\\project\\REACT\\moviebase-react18\\src\\App.js":"13","C:\\deepak\\project\\REACT\\moviebase-react18\\src\\components\\Nav.js":"14","C:\\deepak\\project\\REACT\\moviebase-react18\\src\\components\\Footer.js":"15","C:\\deepak\\project\\REACT\\moviebase-react18\\src\\components\\MovieGallery.js":"16","C:\\deepak\\project\\REACT\\moviebase-react18\\src\\components\\Home.js":"17","C:\\deepak\\project\\REACT\\moviebase-react18\\src\\store\\MovieContext.js":"18","C:\\deepak\\project\\REACT\\moviebase-react18\\src\\components\\MovieDetail.js":"19","C:\\deepak\\project\\REACT\\moviebase-react18\\src\\components\\SearchPanel.js":"20","C:\\deepak\\project\\REACT\\moviebase-react18\\src\\components\\VisitedList.js":"21","C:\\deepak\\project\\REACT\\moviebase-react18\\src\\components\\Movie.js":"22"},{"size":151,"mtime":1651586928378,"results":"23","hashOfConfig":"24"},{"size":983,"mtime":1652196025175,"results":"25","hashOfConfig":"24"},{"size":512,"mtime":1652270258188,"results":"26","hashOfConfig":"24"},{"size":281,"mtime":1614709849662,"results":"27","hashOfConfig":"24"},{"size":283,"mtime":1651732795648,"results":"28","hashOfConfig":"24"},{"size":6420,"mtime":1652271668127,"results":"29","hashOfConfig":"24"},{"size":808,"mtime":1651553653348,"results":"30","hashOfConfig":"24"},{"size":2282,"mtime":1651732446471,"results":"31","hashOfConfig":"24"},{"size":1894,"mtime":1652270259646,"results":"32","hashOfConfig":"24"},{"size":1488,"mtime":1651511350260,"results":"33","hashOfConfig":"24"},{"size":851,"mtime":1621262215622,"results":"34","hashOfConfig":"24"},{"size":155,"mtime":1651584545454,"results":"35","hashOfConfig":"36"},{"size":975,"mtime":1651585303711,"results":"37","hashOfConfig":"36"},{"size":281,"mtime":1614709849662,"results":"38","hashOfConfig":"36"},{"size":148,"mtime":1616767490831,"results":"39","hashOfConfig":"36"},{"size":6310,"mtime":1651581018016,"results":"40","hashOfConfig":"36"},{"size":808,"mtime":1651553653348,"results":"41","hashOfConfig":"36"},{"size":460,"mtime":1651500086302,"results":"42","hashOfConfig":"36"},{"size":2245,"mtime":1651585234846,"results":"43","hashOfConfig":"36"},{"size":1697,"mtime":1651581072320,"results":"44","hashOfConfig":"36"},{"size":851,"mtime":1621262215622,"results":"45","hashOfConfig":"36"},{"size":1488,"mtime":1651511350260,"results":"46","hashOfConfig":"36"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"su4nw",{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"64","usedDeprecatedRules":"49"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"x45f8q",{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"73"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},"C:\\deepak\\project\\REACT\\moviebaseV2\\src\\index.js",[],["95","96"],"C:\\deepak\\project\\REACT\\moviebaseV2\\src\\App.js",[],"C:\\deepak\\project\\REACT\\moviebaseV2\\src\\store\\MovieContext.js",[],"C:\\deepak\\project\\REACT\\moviebaseV2\\src\\components\\Nav.js",[],"C:\\deepak\\project\\REACT\\moviebaseV2\\src\\components\\Footer.js",[],"C:\\deepak\\project\\REACT\\moviebaseV2\\src\\components\\MovieGallery.js",["97","98"],"C:\\deepak\\project\\REACT\\moviebaseV2\\src\\components\\Home.js",[],"C:\\deepak\\project\\REACT\\moviebaseV2\\src\\components\\MovieDetail.js",["99","100"],"import { Link,useParams } from \"react-router-dom\";\r\nimport { MovieContext } from \"../store/MovieContext\";\r\nimport { useContext,useEffect,useState } from \"react\";\r\nimport \"../css/movie-detail.css\";\r\n\r\n//https://api.themoviedb.org/3/movie/19404?api_key=0fec03f37874864d189b9e4e3c1eec79&language=en-US\r\n\r\nconst MovieDetail = ({ match }) => {\r\n  const { movies } = useContext(MovieContext);\r\n  const [details, setDetails] = useState(null);\r\n  const params = useParams();\r\n  const movieID = Number(params.id);  \r\n  const movie = movies.find((m) => m.id === movieID);\r\n  sessionStorage.setItem(\"page\", movie.name);\r\n  const genres = movie.genre.split(\"|\");\r\n  let colorRate = Number(movie.rating) > 50 ? \"rate-grey\" : \"rate-pale\";\r\n  colorRate = Number(movie.rating) >= 85 ? \"rate-red\" : colorRate;\r\n  useEffect(()=>{\r\n    fetch(`https://api.themoviedb.org/3/movie/${movieID}?api_key=0fec03f37874864d189b9e4e3c1eec79&language=en-US`)\r\n    .then(data=>data.json())\r\n    .then(movDetails => setDetails(movDetails))\r\n  },[]);\r\n  const mRelease=movie.release.split(\"-\")\r\n  const mov_date = `${mRelease[2]}/${mRelease[1]}/${mRelease[0]}`\r\n  return (\r\n    details && (<div className=\"detailStyle\">\r\n      <div>\r\n        <h4 style={{ color: \"grey\" }}>MOVIE DETAILS: <span className=\"back-link\"><Link to=\"/gallery\">&lt; Go Back</Link></span></h4>\r\n        <h1>{movie.name}</h1>\r\n        <p>\r\n          <img src={`https://image.tmdb.org/t/p/w500${details.poster_path}`} width=\"300\" alt=\"\" />\r\n        </p>\r\n        <p>\r\n          Genre {genres.map((genre, i) => (\r\n            <span key={i} className=\"tags\" style={{ marginRight: \"10px\" }}>\r\n               {genre}\r\n            </span>\r\n          ))}\r\n        </p>\r\n        <p>\r\n          Run Time: <b>{details.runtime} min</b>\r\n        </p>\r\n        <p>\r\n          Release Date: <b>{mov_date}</b>\r\n        </p>\r\n        <p>\r\n          Country: <b>{details.production_countries[0]?.name}</b>\r\n        </p>\r\n        <p>\r\n          {details.overview}\r\n        </p>\r\n        <p><a href={`https://www.imdb.com/title/${details.imdb_id}/`} target=\"_blank\">IMDB</a></p>\r\n        <p>\r\n          <span className={`${colorRate} ratingText`}>{movie.rating}%</span>\r\n        </p>\r\n        \r\n      </div>\r\n    </div>)\r\n  );\r\n};\r\n\r\nexport default MovieDetail;\r\n","C:\\deepak\\project\\REACT\\moviebaseV2\\src\\components\\SearchPanel.js",[],"C:\\deepak\\project\\REACT\\moviebaseV2\\src\\components\\Movie.js",[],"C:\\deepak\\project\\REACT\\moviebaseV2\\src\\components\\VisitedList.js",[],"C:\\deepak\\project\\REACT\\moviebase-react18\\src\\index.js",[],["101","102"],"C:\\deepak\\project\\REACT\\moviebase-react18\\src\\App.js",[],"C:\\deepak\\project\\REACT\\moviebase-react18\\src\\components\\Nav.js",[],"C:\\deepak\\project\\REACT\\moviebase-react18\\src\\components\\Footer.js",[],"C:\\deepak\\project\\REACT\\moviebase-react18\\src\\components\\MovieGallery.js",["103","104"],"import { MovieContext } from \"../store/MovieContext\";\r\nimport { useContext, useState, useEffect } from \"react\";\r\nimport { SearchPanel } from \"./SearchPanel\";\r\nimport { VisitedList } from \"./VisitedList\";\r\nimport Movie from \"./Movie\";\r\nimport \"../css/movie-gallery.css\";\r\n//https://api.themoviedb.org/3/discover/movie?api_key=0fec03f37874864d189b9e4e3c1eec79&with_origin_country=IN&with_original_language=ta\r\n\r\n\r\nconst Gallery = () => {\r\n  const [moviename, setMoviename] = useState(\"\");\r\n  const [sortType, setSortType] = useState({\r\n    name: false,\r\n    rating: false,\r\n    runtime: false,\r\n  });\r\n  const { movies, setMovies, movieRef, tagsRef, visitedRef } =\r\n    useContext(MovieContext);\r\n\r\n  const movieSearch = (e) => {\r\n    setMoviename(e.target.value);\r\n  };\r\n\r\n  const nameSearch = () => {\r\n    if (moviename === \"\") return movieRef.current;\r\n    return movieRef.current.filter((m) =>\r\n      m.name.toLowerCase().includes(moviename.toLowerCase())\r\n    );\r\n  };\r\n\r\n  const removeMovie = (id) => {\r\n    movieRef.current = movieRef.current.filter((m) => m.id !== id);\r\n    //setMovies(setFilters());\r\n    sortAndFilter();\r\n  };\r\n\r\n  const selectGenre = (genre, target) => {\r\n    const tagIndex = tagsRef.current.indexOf(genre);\r\n    if (tagIndex >= 0) {\r\n      tagsRef.current.splice(tagIndex, 1);\r\n    } else {\r\n      tagsRef.current.push(genre);\r\n    }\r\n    target.classList.toggle(\"tag-selected\");\r\n    //setMovies(setFilters());\r\n    sortAndFilter();\r\n  };\r\n\r\n  const getTaggedMovieList = (movList) => {\r\n    return movList.filter((m) =>\r\n      tagsRef.current.every((tag) => m.genre.indexOf(tag) >= 0)\r\n    );\r\n  };\r\n\r\n  const setFilters = () => {\r\n    const searchedNames = nameSearch();\r\n    const tagsFilter = getTaggedMovieList(searchedNames || []);\r\n    return tagsFilter;\r\n  };\r\n\r\n  const genreList = {\"genres\":[{\"id\":28,\"name\":\"Action\"},{\"id\":12,\"name\":\"Adventure\"},{\"id\":16,\"name\":\"Animation\"},{\"id\":35,\"name\":\"Comedy\"},{\"id\":80,\"name\":\"Crime\"},{\"id\":99,\"name\":\"Documentary\"},{\"id\":18,\"name\":\"Drama\"},{\"id\":10751,\"name\":\"Family\"},{\"id\":14,\"name\":\"Fantasy\"},{\"id\":36,\"name\":\"History\"},{\"id\":27,\"name\":\"Horror\"},{\"id\":10402,\"name\":\"Music\"},{\"id\":9648,\"name\":\"Mystery\"},{\"id\":10749,\"name\":\"Romance\"},{\"id\":878,\"name\":\"Science Fiction\"},{\"id\":10770,\"name\":\"TV Movie\"},{\"id\":53,\"name\":\"Thriller\"},{\"id\":10752,\"name\":\"War\"},{\"id\":37,\"name\":\"Western\"}]};\r\n\r\n  const getGenres = (ids) => {\r\n    let list = [];\r\n    for (let i in ids) {\r\n        let {name} = genreList.genres.find((item)=>item.id === ids[i])\r\n        list.push(name)\r\n    }\r\n    return list.join(\"|\")\r\n\r\n  }\r\n\r\n  const dataRestructure = (results) => {   \r\n   return results.map((item) => {\r\n    const {id,title,release_date,poster_path,genre_ids,vote_average} = item;\r\n    return {\r\n      id,\r\n      name:title,\r\n      release:release_date,\r\n      photos:`https://image.tmdb.org/t/p/w500${poster_path}`,\r\n      genre:getGenres(genre_ids),\r\n      rating:Number(vote_average)*10\r\n    }    \r\n   });\r\n  }\r\n \r\n  const callMovieAPI = async (pagenum) => {\r\n    const data = await fetch(\r\n      `https://api.themoviedb.org/3/movie/top_rated?api_key=0fec03f37874864d189b9e4e3c1eec79&language=en-US&page=${pagenum}`\r\n    );\r\n    const movies = await data.json();\r\n    const movieData = dataRestructure(movies.results)    \r\n    movieRef.current.push(...movieData);\r\n    return;\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    await callMovieAPI(1)\r\n    await callMovieAPI(2)\r\n    await callMovieAPI(3)\r\n    await callMovieAPI(4)  \r\n    await callMovieAPI(5)  \r\n    console.log(movieRef.current)\r\n    setMovies(movieRef.current);\r\n  };\r\n\r\n \r\n  const sortAndFilter = (params=null) => {\r\n    const param = params || document.querySelector(\".sortSection .active\")?.dataset?.sortype;\r\n    let mov = setFilters();\r\n    setSortType(() => {\r\n      return {\r\n        name: false,\r\n        rating: false,\r\n        release: false,\r\n        [param]: true,\r\n      };\r\n    });\r\n    if (param === \"release\") {\r\n      mov = mov.map((m) => { \r\n        let r = m.release.split(\"-\")\r\n        r.pop();\r\n        const releaseNumeric = Number(r.join(\"\"));\r\n        return {\r\n        ...m,releaseNumeric        \r\n      }});\r\n      mov.sort((a, b) => a.releaseNumeric - b.releaseNumeric);\r\n    }\r\n    if (param === \"name\") {\r\n      mov.sort((a, b) => {\r\n        if (a.name < b.name) return -1;\r\n        if (a.name > b.name) return 1;\r\n        return 0;\r\n      });\r\n    }\r\n    if (param === \"rating\") {\r\n      mov.sort((a, b) => b.rating - a.rating);\r\n    }\r\n    setMovies(mov);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"useEffect, movie name changed\");\r\n    //setMovies(setFilters());\r\n    sortAndFilter();\r\n  }, [moviename]);\r\n\r\n  useEffect(() => {\r\n    tagsRef.current = [];\r\n    console.log(\"useEffect\");\r\n    if (!movieRef.current || !movieRef.current.length) {\r\n      console.log(\"xxx\");\r\n      fetchData();\r\n    } else {\r\n      console.log(\"yyy\");\r\n      setMovies(movieRef.current);\r\n    }\r\n  }, []);\r\n\r\n  const visitedPage = sessionStorage.getItem(\"page\") || \"\";\r\n  if (visitedPage) {\r\n    const index = visitedRef.current.indexOf(visitedPage);\r\n    if (index >= 0) {\r\n      visitedRef.current.splice(index, 1);\r\n    }\r\n    visitedRef.current.push(visitedPage);\r\n    sessionStorage.removeItem(\"page\");\r\n  }\r\n  const noMovieText = movieRef.current.length && !movies.length ? \"No Movies Found\" : !movieRef.current.length ? \"Loading...\" : \"\";\r\n\r\n  return (\r\n    <div className=\"galleryStyle\">\r\n      <h1>Movie Gallery ({movies.length})</h1>\r\n\r\n      <SearchPanel\r\n        moviename={moviename}\r\n        movieSearch={movieSearch}\r\n        movieRef={movieRef.current}\r\n        sortType={sortType}\r\n        sortby={sortAndFilter}\r\n        selectGenre={selectGenre}\r\n      />      \r\n      \r\n      <VisitedList visited={visitedRef.current} />\r\n\r\n      <hr style={{ borderColor: \"grey\" }} />\r\n\r\n      <div className=\"tileStyle\">\r\n        {movies.length ? (\r\n          movies.map((mov, i) => (\r\n            <Movie\r\n              key={i}\r\n              movInfo={mov}\r\n              removeMovie={removeMovie}\r\n              isvisited={visitedRef.current.includes(mov.name)}\r\n            />\r\n          ))\r\n        ) : (\r\n          <p>\r\n            <span>{noMovieText}</span>\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","C:\\deepak\\project\\REACT\\moviebase-react18\\src\\components\\Home.js",[],"C:\\deepak\\project\\REACT\\moviebase-react18\\src\\store\\MovieContext.js",[],"C:\\deepak\\project\\REACT\\moviebase-react18\\src\\components\\MovieDetail.js",["105","106"],"C:\\deepak\\project\\REACT\\moviebase-react18\\src\\components\\SearchPanel.js",[],"C:\\deepak\\project\\REACT\\moviebase-react18\\src\\components\\VisitedList.js",[],"C:\\deepak\\project\\REACT\\moviebase-react18\\src\\components\\Movie.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":151,"column":6,"nodeType":"113","endLine":151,"endColumn":17,"suggestions":"114"},{"ruleId":"111","severity":1,"message":"115","line":161,"column":6,"nodeType":"113","endLine":161,"endColumn":8,"suggestions":"116"},{"ruleId":"111","severity":1,"message":"117","line":22,"column":5,"nodeType":"113","endLine":22,"endColumn":7,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":52,"column":12,"nodeType":"121","messageId":"122","endLine":52,"endColumn":87,"fix":"123"},{"ruleId":"107","replacedBy":"124"},{"ruleId":"109","replacedBy":"125"},{"ruleId":"111","severity":1,"message":"112","line":146,"column":6,"nodeType":"113","endLine":146,"endColumn":17,"suggestions":"126"},{"ruleId":"111","severity":1,"message":"127","line":158,"column":6,"nodeType":"113","endLine":158,"endColumn":8,"suggestions":"128"},{"ruleId":"111","severity":1,"message":"117","line":22,"column":5,"nodeType":"113","endLine":22,"endColumn":7,"suggestions":"129"},{"ruleId":"119","severity":1,"message":"120","line":52,"column":12,"nodeType":"121","messageId":"122","endLine":52,"endColumn":87,"fix":"130"},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sortAndFilter'. Either include it or remove the dependency array.","ArrayExpression",["133"],"React Hook useEffect has missing dependencies: 'fetchData', 'movieRef', 'sortAndFilter', and 'tagsRef'. Either include them or remove the dependency array.",["134"],"React Hook useEffect has a missing dependency: 'movieID'. Either include it or remove the dependency array.",["135"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"136","text":"137"},["131"],["132"],["138"],"React Hook useEffect has missing dependencies: 'fetchData', 'movieRef', 'setMovies', and 'tagsRef'. Either include them or remove the dependency array.",["139"],["140"],{"range":"141","text":"137"},"no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},[2084,2084]," rel=\"noreferrer\"",{"desc":"142","fix":"148"},{"desc":"149","fix":"150"},{"desc":"146","fix":"151"},[2008,2008],"Update the dependencies array to be: [moviename, sortAndFilter]",{"range":"152","text":"153"},"Update the dependencies array to be: [fetchData, movieRef, sortAndFilter, tagsRef]",{"range":"154","text":"155"},"Update the dependencies array to be: [movieID]",{"range":"156","text":"157"},{"range":"158","text":"153"},"Update the dependencies array to be: [fetchData, movieRef, setMovies, tagsRef]",{"range":"159","text":"160"},{"range":"161","text":"157"},[4838,4849],"[moviename, sortAndFilter]",[5061,5063],"[fetchData, movieRef, sortAndFilter, tagsRef]",[1012,1014],"[movieID]",[4661,4672],[4951,4953],"[fetchData, movieRef, setMovies, tagsRef]",[1012,1014]]